* Tasks

* TODO [#A] Catch errors returned by OpenAI
* TODO [#B] Skip embeddings generation if hash didn't change
* TODO [#C] Extract title from the =#+title= field of the file
* TODO [#B] Implement traversing over org-roam node and generating embeddings
** DONE Search should display in an org buffer
:LOGBOOK:
- State "DONE"       from "TODO"       [2023-06-17 Sat 07:38]
:END:
Current "I'm feeling lucky" approach is't very helpful.

** DONE [#A] JSON storage have model data cached
:LOGBOOK:
- State "DONE"       from "CANCELED"   [2023-06-11 Sun 15:35]
- State "DONE"       from "TODO"       [2023-06-11 Sun 15:35]
:END:

This way we will be able to patch the model data at any time wihout
being afraid of race conditions.


* Logic

The library can receive embeddings from various AI engines, with
OpenAI being one of the options.

It takes an org-element as input and performs the necessary operations
within the library.

The output vector can be saved in a vector database or utilized in any other preferred
manner.

** Namespaces

- =org-embeddings-store-*= - Used to save embeddings received from AI
  services.

- =org-embeddings-create-*= - Create an embedding for a given text.
- =org-embeddings-element-*= - Works with org file structure
- =org-embeddings-json-*= - Store embeddings in JSON - suitable for
  development;
- =org-embeddings-openai-*= - Create embeddings with OpenAI.
- =org-embeddings-pipe-*= - Pre-process the data before sending it to an
  API.
